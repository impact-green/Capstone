{"ast":null,"code":"import axios from'axios';import*as actionTypes from'./actionTypes';import history from'../../history';export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(token){return{type:actionTypes.AUTH_SUCCESS,token:token};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var logout=function logout(){return function(dispatch){dispatch(handleLogout());history.push('/');};};var handleLogout=function handleLogout(){localStorage.removeItem('user');localStorage.removeItem('expirationDate');return{type:actionTypes.AUTH_LOGOUT};};var checkAuthTimeout=function checkAuthTimeout(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logout());},expirationTime*1000);};};export var authLogin=function authLogin(username,password){return function(dispatch){dispatch(authStart());axios.post('http://127.0.0.1:8000/rest-auth/login/',{username:username,password:password}).then(function(res){var token=res.data.key;var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem('token',token);localStorage.setItem('expirationDate',expirationDate);dispatch(authSuccess(token));dispatch(checkAuthTimeout(3600));history.push('/upload');}).catch(function(err){dispatch(authFail(err));});};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem('token');if(token===undefined){//dispatch(logout());\ndispatch(handleLogout());}else{var expirationDate=new Date(localStorage.getItem('expirationDate'));if(expirationDate<=new Date()){//dispatch(logout());\ndispatch(handleLogout());}else{dispatch(authSuccess(token));dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));}}};};","map":{"version":3,"sources":["/Users/yueshanlin/Documents/capstoneProject/src/store/actions/auth.js"],"names":["axios","actionTypes","history","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","dispatch","handleLogout","push","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","setTimeout","authLogin","username","password","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nimport history from '../../history';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        dispatch(handleLogout());\n        history.push('/');\n    }\n}\n\nconst handleLogout= () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('expirationDate');\n    return{\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nconst checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            username: username,\n            password: password\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n            history.push('/upload');\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n\n        if (token === undefined) {\n            //dispatch(logout());\n            dispatch(handleLogout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                //dispatch(logout());\n                dispatch(handleLogout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}